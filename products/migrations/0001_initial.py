# Generated by Django 4.2 on 2023-06-24 19:07

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('customers', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('image', models.ImageField(default='no_picture.png', upload_to='products')),
                ('currency', models.CharField(choices=[('USD', 'US Dollar'), ('EUR', 'Euro'), ('KRW', 'South Korean Won'), ('BTC', 'Bitcoin'), ('JPY', 'Japanese Yen'), ('CNY', 'Chinese Yuan'), ('GBP', 'British Pound Sterling')], max_length=30, null=True)),
                ('price', models.FloatField()),
                ('moq', models.IntegerField(blank=True, default=1, null=True)),
                ('price_quantity_base', models.PositiveIntegerField(default=10)),
                ('remark', models.TextField(blank=True, max_length=1024)),
                ('product_type', models.CharField(choices=[('Sensor', 'Sensor'), ('Plasma Torch', 'Plasma Torch'), ('Pump', 'Pump'), ('Pressure', 'Pressure'), ('Etc', 'Etc')], max_length=50)),
                ('inventory', models.IntegerField(default=0)),
                ('average_unit_price_KRW', models.FloatField(default=0, null=True)),
                ('average_ex_rate_to_KRW', models.FloatField(default=0, null=True)),
                ('total_quantity', models.PositiveIntegerField(default=0, null=True)),
                ('total_net_price_KRW', models.FloatField(default=0, null=True)),
                ('total_added_price_KRW', models.FloatField(default=0, null=True)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('customers', models.ManyToManyField(blank=True, related_name='product_customers', to='customers.customer')),
                ('supplier', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_supplier', to='customers.supplier')),
            ],
            options={
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='Purchase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit_price', models.FloatField()),
                ('quantity', models.PositiveIntegerField()),
                ('net_price', models.FloatField()),
                ('added_cost', models.FloatField(default=0)),
                ('added_price', models.FloatField()),
                ('ex_rate_to_KRW', models.FloatField()),
                ('net_price_KRW', models.FloatField()),
                ('custom_tax_KRW', models.FloatField(default=0)),
                ('transport_cost_KRW', models.FloatField(default=0)),
                ('bank_cost_KRW', models.FloatField(default=0)),
                ('delivery_cost_KRW', models.FloatField(default=0)),
                ('added_price_KRW', models.FloatField()),
                ('status', models.CharField(choices=[('prep', 'Preparation'), ('PO', 'PO issued'), ('Invoice', 'Invoice paid'), ('Arrived', 'Arrived'), ('Stocked', 'Stocked')], max_length=30)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_purchase', to='products.product')),
            ],
            options={
                'ordering': ('-created',),
            },
        ),
    ]
