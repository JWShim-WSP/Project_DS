"""
Django settings for Project_DS project.

Generated by 'django-admin startproject' using Django 4.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path

# for hiding secret information such as email password, API key, etc.
import environ
env = environ.Env()
environ.Env.read_env()

HOST_IP_ADDRESS = env('HOST_IP_ADDRESS')

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-%s=9+)0+xd0_ruyyd_40x(xdyyrem8t=m6iv_%i4f8ext9e9ps'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [HOST_IP_ADDRESS, 'JView-Lab', 'localhost', '127.0.0.1']
#ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',

    # BST-Project apps
    'sales',
    'reports',
    'profiles',
    'products',
    'customers',
    'myadmin',
    'bulletin',

    # favorite tools
    'tools',
    'calculator',
    'calendarwithevent',
    'excurrency',
    'worldtime',
    'todolist',
    'emailsend',

    # 3rd party apps
    'crispy_forms',
    'crispy_bootstrap5',
    # Excel import and export
    'import_export',
    # Django-hitcount app to count the hits for project's db (Bulletin Post)
    'hitcount',
    'user_visit',
    # Django all-auth
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
]

SITE_ID = 1

CRISPY_TEMPLATE_PACK = 'bootstrap5'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'user_visit.middleware.UserVisitMiddleware',
]

ROOT_URLCONF = 'Project_DS.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.request',
                'profiles.context_processors.profile_pic',
                'profiles.context_processors.invitations_received_no',
            ],
        },
    },
]

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
]

WSGI_APPLICATION = 'Project_DS.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = False

#LOGIN_URL = '/accounts/login'
LOGIN_URL = '/login'
LOGIN_REDIRECT_URL = '/bulletin'
ACCOUNT_AUTHENTICATION_METHOD = 'email'
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_EMAIL_UNIQUE = True
#ACCOUNT_EMAIL_VERIFICATION = 'mandatory'
#EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# you should take a look and invest some time for this, Social Network project in Django (PART 18) by Pyplane
#if DEBUG:
#    EMAIL_BACKEND = 'django.core.mail.backends.dummy.EmailBackend'


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    BASE_DIR / 'static',
    BASE_DIR / 'sales' / 'static',
    BASE_DIR / 'reports' / 'static',
    BASE_DIR / 'excurrency' / 'static',
    BASE_DIR / 'emailsend' / 'static',
]
STATIC_ROOT = BASE_DIR / 'productionfiles'

MEDIA_URL = 'media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Send e-mails through the SMTP-server defined in .env
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = env('EMAIL_HOST')
EMAIL_PORT = 587

EMAIL_HOST_USER = env('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = env('EMAIL_HOST_PASSWORD')

#Custom setting: To email
RECIPIENT_ADDRESS = env('RECIPIENT_ADDRESS')